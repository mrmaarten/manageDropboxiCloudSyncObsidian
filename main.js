/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => AddToDeletePlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var AddToDeletePlugin = class extends import_obsidian.Plugin {
  // settings: MyPluginSettings;
  async onload() {
    this.registerEvent(
      this.app.workspace.on("file-menu", (menu, file, source) => {
        menu.addItem((item) => {
          item.setTitle("Add to _delete").setIcon("trash").onClick(() => this.addToDelete(file));
        });
      })
    );
  }
  onunload() {
  }
  // async loadSettings() {
  //     this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());
  // }
  // async saveSettings() {
  //     await this.saveData(this.settings);
  // }
  async addToDelete(file) {
    const vault = this.app.vault;
    let deleteFile = vault.getAbstractFileByPath("_delete.md");
    if (!deleteFile) {
      await vault.create("_delete.md", "");
      deleteFile = vault.getAbstractFileByPath("_delete.md");
    }
    const filePath = file.path;
    const currentContent = await vault.read(deleteFile);
    await vault.modify(deleteFile, currentContent + "\n" + filePath);
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgUGx1Z2luLCBURmlsZSwgVmF1bHQgfSBmcm9tICdvYnNpZGlhbic7XG5cbi8vIGludGVyZmFjZSBNeVBsdWdpblNldHRpbmdzIHt9XG5cbi8vIGNvbnN0IERFRkFVTFRfU0VUVElOR1M6IE15UGx1Z2luU2V0dGluZ3MgPSB7fVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBZGRUb0RlbGV0ZVBsdWdpbiBleHRlbmRzIFBsdWdpbiB7XG4gICAgLy8gc2V0dGluZ3M6IE15UGx1Z2luU2V0dGluZ3M7XG5cbiAgICBhc3luYyBvbmxvYWQoKSB7XG4gICAgICAgIC8vIGF3YWl0IHRoaXMubG9hZFNldHRpbmdzKCk7XG5cbiAgICAgICAgdGhpcy5yZWdpc3RlckV2ZW50KFxuICAgICAgICAgICAgdGhpcy5hcHAud29ya3NwYWNlLm9uKCdmaWxlLW1lbnUnLCAobWVudSwgZmlsZTogVEZpbGUsIHNvdXJjZSkgPT4ge1xuICAgICAgICAgICAgICAgIG1lbnUuYWRkSXRlbSgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpdGVtLnNldFRpdGxlKCdBZGQgdG8gX2RlbGV0ZScpXG4gICAgICAgICAgICAgICAgICAgICAgICAuc2V0SWNvbigndHJhc2gnKVxuICAgICAgICAgICAgICAgICAgICAgICAgLm9uQ2xpY2soKCkgPT4gdGhpcy5hZGRUb0RlbGV0ZShmaWxlKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICApO1xuICAgIH1cblxuICAgIG9udW5sb2FkKCkge31cblxuICAgIC8vIGFzeW5jIGxvYWRTZXR0aW5ncygpIHtcbiAgICAvLyAgICAgdGhpcy5zZXR0aW5ncyA9IE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfU0VUVElOR1MsIGF3YWl0IHRoaXMubG9hZERhdGEoKSk7XG4gICAgLy8gfVxuXG4gICAgLy8gYXN5bmMgc2F2ZVNldHRpbmdzKCkge1xuICAgIC8vICAgICBhd2FpdCB0aGlzLnNhdmVEYXRhKHRoaXMuc2V0dGluZ3MpO1xuICAgIC8vIH1cblxuICAgIGFzeW5jIGFkZFRvRGVsZXRlKGZpbGU6IFRGaWxlKSB7XG4gICAgICAgIGNvbnN0IHZhdWx0OiBWYXVsdCA9IHRoaXMuYXBwLnZhdWx0O1xuICAgICAgICBsZXQgZGVsZXRlRmlsZTogVEZpbGUgPSB2YXVsdC5nZXRBYnN0cmFjdEZpbGVCeVBhdGgoJ19kZWxldGUubWQnKSBhcyBURmlsZTtcbiAgICAgICAgXG4gICAgICAgIGlmICghZGVsZXRlRmlsZSkge1xuICAgICAgICAgICAgYXdhaXQgdmF1bHQuY3JlYXRlKCdfZGVsZXRlLm1kJywgJycpO1xuICAgICAgICAgICAgZGVsZXRlRmlsZSA9IHZhdWx0LmdldEFic3RyYWN0RmlsZUJ5UGF0aCgnX2RlbGV0ZS5tZCcpIGFzIFRGaWxlO1xuICAgICAgICB9XG5cblx0XHRjb25zdCBmaWxlUGF0aDogc3RyaW5nID0gZmlsZS5wYXRoO1xuICAgICAgICBjb25zdCBjdXJyZW50Q29udGVudDogc3RyaW5nID0gYXdhaXQgdmF1bHQucmVhZChkZWxldGVGaWxlKTtcbiAgICAgICAgYXdhaXQgdmF1bHQubW9kaWZ5KGRlbGV0ZUZpbGUsIGN1cnJlbnRDb250ZW50ICsgJ1xcbicgKyBmaWxlUGF0aCk7XG4gICAgfVxufSJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQkFBcUM7QUFNckMsSUFBcUIsb0JBQXJCLGNBQStDLHVCQUFPO0FBQUE7QUFBQSxFQUdsRCxNQUFNLFNBQVM7QUFHWCxTQUFLO0FBQUEsTUFDRCxLQUFLLElBQUksVUFBVSxHQUFHLGFBQWEsQ0FBQyxNQUFNLE1BQWEsV0FBVztBQUM5RCxhQUFLLFFBQVEsQ0FBQyxTQUFTO0FBQ25CLGVBQUssU0FBUyxnQkFBZ0IsRUFDekIsUUFBUSxPQUFPLEVBQ2YsUUFBUSxNQUFNLEtBQUssWUFBWSxJQUFJLENBQUM7QUFBQSxRQUM3QyxDQUFDO0FBQUEsTUFDTCxDQUFDO0FBQUEsSUFDTDtBQUFBLEVBQ0o7QUFBQSxFQUVBLFdBQVc7QUFBQSxFQUFDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFVWixNQUFNLFlBQVksTUFBYTtBQUMzQixVQUFNLFFBQWUsS0FBSyxJQUFJO0FBQzlCLFFBQUksYUFBb0IsTUFBTSxzQkFBc0IsWUFBWTtBQUVoRSxRQUFJLENBQUMsWUFBWTtBQUNiLFlBQU0sTUFBTSxPQUFPLGNBQWMsRUFBRTtBQUNuQyxtQkFBYSxNQUFNLHNCQUFzQixZQUFZO0FBQUEsSUFDekQ7QUFFTixVQUFNLFdBQW1CLEtBQUs7QUFDeEIsVUFBTSxpQkFBeUIsTUFBTSxNQUFNLEtBQUssVUFBVTtBQUMxRCxVQUFNLE1BQU0sT0FBTyxZQUFZLGlCQUFpQixPQUFPLFFBQVE7QUFBQSxFQUNuRTtBQUNKOyIsCiAgIm5hbWVzIjogW10KfQo=
